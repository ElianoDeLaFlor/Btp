@model Btp.Models.Users
@{
    ViewBag.Title = "Créer";
    Layout = "~/Views/Shared/Site_Layout.cshtml";
}
<br/>
<h2 class="centrer">Créer un nouveau utilisateur</h2>
@{
    string style;
    if (ViewBag.Exist != null)
    {
        style = "block";
    }
    else
    {
        style = "none";
    }
        <p style="display:@style" class="alert alert-danger centrer">@ViewBag.Exist</p>
}
    
<br/>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            
            <div class="card test">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumDropDownListFor(model => model.UserRole, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserRole)
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group ">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Créer" class="btn btn-secondary" />
                        @Html.ActionLink("Retourner à la liste", "Index",null,new {@class="btn btn-primary" })
                    </div>
                    
                </div>
            </div>

        </div>
  
     }

    
